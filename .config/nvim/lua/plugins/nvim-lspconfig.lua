return {}
  
-- return {
-- {
-- 		"neovim/nvim-lspconfig",
-- 		dependencies = {
-- 			--   "nvimtools/none-ls-extras.nvim",
-- 			"williamboman/mason.nvim",
-- 			"williamboman/mason-lspconfig.nvim",
-- 			{ "folke/neodev.nvim", opts = {} },
-- 		},
-- 		lazy = false,
-- 		config = function()
-- 			local capabilities = require("cmp_nvim_lsp").default_capabilities()
-- 			local lspconfig = require("lspconfig")
--
-- 			lspconfig.tsserver.setup({
-- 				capabilities = capabilities,
-- 			})
-- 			lspconfig.html.setup({
-- 				capabilities = capabilities,
-- 			})
-- 			lspconfig.lua_ls.setup({
-- 				capabilities = capabilities,
-- 			})
-- 			lspconfig.omnisharp.setup({
-- 				capabilities = capabilities,
-- 				enable_roslyn_analysers = true,
-- 				enable_import_completion = true,
-- 				organize_imports_on_format = true,
-- 				enable_decompilation_support = true,
-- 				-- filetypes = { "cs", "vb", "csproj", "sln", "slnx", "props", "csx", "targets" },
-- 			})
--
-- 			vim.keymap.set("n", "K", vim.lsp.buf.hover, {})
-- 			vim.keymap.set("n", "<leader>gd", vim.lsp.buf.definition, {})
-- 			vim.keymap.set("n", "<leader>gr", vim.lsp.buf.references, {})
-- 			vim.keymap.set("n", "<leader>ca", vim.lsp.buf.code_action, {})
--
--        vim.keymap.set("n", '<leader>rn', vim.lsp.buf.rename, {})
-- 		end,
-- 	},
-- 	{
-- 		"williamboman/mason.nvim",
-- 		lazy = false,
-- 		opts = {
-- 			ensure_installed = {
-- 				-- "eslint-lsp",
-- 				-- "js-debug-adapter",
-- 				-- "prettier",
-- 				-- "typescript-language-server",
-- 				-- "csharp_ls",
-- 				-- "ominsharp"
-- 			},
-- 		},
-- 		config = function()
-- 			require("mason").setup()
-- 		end,
-- 	},
-- 	{
-- 		"williamboman/mason-lspconfig.nvim",
-- 		config = function()
-- 			require("mason-lspconfig").setup({
-- 				ensure_installed = {
-- 					-- "lua_ls",
-- 					-- "tsserver",
-- 					-- "eslint",
-- 					"csharp_ls",
-- 					"omnisharp",
-- 					-- "dockerls",
-- 					-- "docker_compose_language_service",
-- 				},
-- 			})
-- 		end,
-- 	},
-- 	{
-- 		"WhoIsSethDaniel/mason-tool-installer",
-- 		config = function()
-- 			require("mason-tool-installer").setup({
--
-- 				-- a list of all tools you want to ensure are installed upon
-- 				-- start
-- 				ensure_installed = {
--
-- 					-- you can pin a tool to a particular version
-- 					-- { "golangci-lint", version = "v1.47.0" },
--
-- 					-- you can turn off/on auto_update per tool
-- 					-- { "bash-language-server", auto_update = true },
-- 					"lua_ls",
-- 					"tsserver",
-- 					"eslint",
-- 					"csharp_ls",
-- 					"omnisharp",
-- 					"dockerls",
-- 					"docker_compose_language_service",
-- 					-- "lua-language-server",
-- 					-- "vim-language-server",
-- 					-- "gopls",
-- 					"stylua",
-- 					-- "shellcheck",
-- 					-- "editorconfig-checker",
-- 					-- "gofumpt",
-- 					-- "golines",
-- 					-- "gomodifytags",
-- 					-- "gotests",
-- 					-- "impl",
-- 					-- "json-to-struct",
-- 					-- "luacheck",
-- 					-- "misspell",
-- 					-- "revive",
-- 					-- "shellcheck",
-- 					-- "shfmt",
-- 					-- "staticcheck",
-- 					-- "vint",
-- 				},
--
-- 				-- if set to true this will check each tool for updates. If updates
-- 				-- are available the tool will be updated. This setting does not
-- 				-- affect :MasonToolsUpdate or :MasonToolsInstall.
-- 				-- Default: false
-- 				auto_update = false,
--
-- 				-- automatically install / update on startup. If set to false nothing
-- 				-- will happen on startup. You can use :MasonToolsInstall or
-- 				-- :MasonToolsUpdate to install tools and check for updates.
-- 				-- Default: true
-- 				run_on_start = true,
--
-- 				-- set a delay (in ms) before the installation starts. This is only
-- 				-- effective if run_on_start is set to true.
-- 				-- e.g.: 5000 = 5 second delay, 10000 = 10 second delay, etc...
-- 				-- Default: 0
-- 				start_delay = 3000, -- 3 second delay
--
-- 				-- Only attempt to install if 'debounce_hours' number of hours has
-- 				-- elapsed since the last time Neovim was started. This stores a
-- 				-- timestamp in a file named stdpath('data')/mason-tool-installer-debounce.
-- 				-- This is only relevant when you are using 'run_on_start'. It has no
-- 				-- effect when running manually via ':MasonToolsInstall' etc....
-- 				-- Default: nil
-- 				debounce_hours = 5, -- at least 5 hours between attempts to install/update
--
-- 				-- Disable integration with other Mason plugins. This removes
-- 				-- the ability to to use the alternative names of packages provided
-- 				-- by these plugins but disables them from immediately becoming loaded
-- 				integrations = {
-- 					-- ["mason-lspconfig"] = true,
-- 					-- ["mason-null-ls"] = true,
-- 					-- ["mason-nvim-dap"] = true,
-- 				},
-- 			})
-- 		end,
-- 	},
-- }
